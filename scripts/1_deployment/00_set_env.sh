#!/bin/bash
# 00_set_env.sh - Set up Shuttle environment variables
#
# Usage: 
#   ./00_set_env.sh                    # Use system production defaults (for services)
#   ./00_set_env.sh -e                 # Use development defaults
#   ./00_set_env.sh -u                 # Use user production defaults
#   ./00_set_env.sh [config] [venv] [work]  # Use custom paths

# Get home directory and project root
HOME_DIR=$(eval echo ~$USER)
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$(dirname "$(dirname "$SCRIPT_DIR")")"

# Check for mode flags
DEV_MODE=false
USER_MODE=false
if [[ "$1" == "-e" ]]; then
    DEV_MODE=true
    shift  # Remove -e from arguments
elif [[ "$1" == "-u" ]]; then
    USER_MODE=true
    shift  # Remove -u from arguments
fi

# Set default paths based on mode
if [[ "$DEV_MODE" == true ]]; then
    # Development defaults - use project root
    DEFAULT_CONFIG_PATH="$PROJECT_ROOT/config.conf"
    DEFAULT_VENV_PATH="$PROJECT_ROOT/.venv"
    DEFAULT_WORK_DIR="$PROJECT_ROOT/work"
    echo "Using development mode defaults..."
elif [[ "$USER_MODE" == true ]]; then
    # User production defaults - under user's home directory
    DEFAULT_CONFIG_PATH="$HOME_DIR/.config/shuttle/config.conf"
    DEFAULT_VENV_PATH="$HOME_DIR/.local/share/shuttle/venv"
    DEFAULT_WORK_DIR="$HOME_DIR/.local/share/shuttle/work"
    echo "Using user production mode defaults..."
else
    # System production defaults - shared paths for service accounts
    DEFAULT_CONFIG_PATH="/etc/shuttle/config.conf"
    DEFAULT_VENV_PATH="/opt/shuttle/venv"
    DEFAULT_WORK_DIR="/var/lib/shuttle"
    echo "Using system production mode defaults..."
fi

# Parse remaining arguments (allow overriding even in dev mode)
CONFIG_PATH=${1:-$DEFAULT_CONFIG_PATH}
VENV_PATH=${2:-$DEFAULT_VENV_PATH}
WORK_DIR=${3:-$DEFAULT_WORK_DIR}

# Create directories
mkdir -p $(dirname "$CONFIG_PATH")
mkdir -p "$VENV_PATH"
mkdir -p "$WORK_DIR"

# Set environment variables for this session
export SHUTTLE_CONFIG_PATH="$CONFIG_PATH"
export SHUTTLE_VENV_PATH="$VENV_PATH"
export SHUTTLE_WORK_DIR="$WORK_DIR"

# Determine where to save shuttle_env.sh
# Save the environment file in the same directory as the config file
# This keeps all shuttle configuration together in one place
CONFIG_DIR="$(dirname "$CONFIG_PATH")"
ENV_FILE_PATH="$CONFIG_DIR/shuttle_env.sh"

# Create a sourceable file
cat > "$ENV_FILE_PATH" << EOF
#!/bin/bash
# Shuttle environment variables
# Generated by 00_set_env.sh on $(date)

export SHUTTLE_CONFIG_PATH="$CONFIG_PATH"
export SHUTTLE_VENV_PATH="$VENV_PATH"
export SHUTTLE_WORK_DIR="$WORK_DIR"

# Display current settings
echo "Shuttle environment loaded:"
echo "  SHUTTLE_CONFIG_PATH=\$SHUTTLE_CONFIG_PATH"
echo "  SHUTTLE_VENV_PATH=\$SHUTTLE_VENV_PATH"
echo "  SHUTTLE_WORK_DIR=\$SHUTTLE_WORK_DIR"
EOF

# Make the env file executable
chmod +x "$ENV_FILE_PATH"

# In development mode, also create a .env file in project root for IDEs/tools
if [[ "$DEV_MODE" == true ]]; then
    DOT_ENV_PATH="$PROJECT_ROOT/.env"
    cat > "$DOT_ENV_PATH" << EOF
# Python paths for IDE import resolution
PYTHONPATH=./src/shared_library:./src/shuttle_app:./src/shuttle_defender_test_app:./tests

# Shuttle environment variables
SHUTTLE_CONFIG_PATH=$CONFIG_PATH
SHUTTLE_VENV_PATH=$VENV_PATH
SHUTTLE_WORK_DIR=$WORK_DIR

# Development logging
SHUTTLE_LOG_LEVEL=DEBUG
EOF
    echo "Development .env file created at: $DOT_ENV_PATH"
fi

echo ""
echo "Environment variables set:"
echo "  SHUTTLE_CONFIG_PATH=$SHUTTLE_CONFIG_PATH"
echo "  SHUTTLE_VENV_PATH=$SHUTTLE_VENV_PATH"
echo "  SHUTTLE_WORK_DIR=$SHUTTLE_WORK_DIR"
echo ""
echo "Environment file created at: $ENV_FILE_PATH"
echo ""
echo "These variables are set for the current session."
echo "For future sessions, source the environment with:"
echo "  source $ENV_FILE_PATH"